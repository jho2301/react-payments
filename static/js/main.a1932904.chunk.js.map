{"version":3,"sources":["global.styles.ts","components/common/Container/index.tsx","components/AddCard/AddCardForm/AddCardInputLabel/styles.ts","components/AddCard/AddCardForm/AddCardInputLabel/index.tsx","constants/i18n.ts","utils/format.ts","constants/palette.ts","components/common/CreditCard/styles.ts","constants/creditCard.ts","components/common/CreditCard/index.tsx","components/common/Modal/index.tsx","components/common/Button/index.tsx","components/AddCard/CardBrandModal/styles.ts","components/AddCard/CardBrandModal/index.tsx","components/common/Input/index.tsx","components/AddCard/NicknameModal/styles.ts","components/AddCard/NicknameModal/index.tsx","constants/cardData.ts","constants/addCardForm.ts","constants/messages.ts","components/AddCard/AddCardForm/styles.tsx","utils/validator.ts","components/AddCard/AddCardForm/index.tsx","components/AddCard/AddCardForm/validator.ts","components/common/Template/index.tsx","components/AddCard/AddCardTemplate/index.tsx","pages/AddCardPage/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","width","flex","justifyContent","alignItems","backgroundColor","AddCardInputLabelContainer","label","AddCardInputLabel","children","Array","isArray","map","el","idx","className","LOCALE","formatNumber2Digits","number","toLocaleString","minimumIntegerDigits","GRAY","BAEMINT","mdSize","css","lgSize","CreditCardContainer","cardColor","size","CARD_NUMBER_SEPARATOR","DEFAULT_VALUE","CreditCard","cardBrand","ownerName","cardNumber","expDate","splitedCardNumber","split","name","color","repeat","length","month","Number","year","ModalContainer","bottomType","fullType","ModalInner","type","Modal","modalClose","onClick","target","currentTarget","bottomRight","Button","button","position","IconButtonContainer","IconButton","ButtonContainer","CardBrandModal","cardBrands","onClickCardBrandButton","containerRef","useRef","useEffect","current","focus","ref","tabIndex","brand","index","Input","input","height","textCenter","underline","NicknameContainer","NicknameModal","nickname","setNickname","value","onChange","CARD_BRAND","LABEL","PLACEHOLDER","ALERT","AddCardFormContainer","AddCardInputContainer","isNumberString","isNaN","AddCardForm","useState","setCardBrand","setOwnerName","setCardNumber","setExpDate","CVC","setCVC","password","setPassword","isCardBrandModalVisible","setIsCardBrandModalVisible","isNicknameModalVisible","setIsNicknameModalVisible","secondCardNumberInputRef","thirdCardNumberInputRef","fourthCardNumberInputRef","expYearInputRef","secondPasswordInputRef","onChangeCardNumber","isValidCardNumber","nextValue","focusNextCardNumberInput","onBlurExpDate","onChangePassword","isValidPassword","nextPassword","onSetCardBrand","join","onSubmit","event","preventDefault","alert","maxLength","reduce","acc","curr","array","slice","placeholder","isValidExpMonth","onBlur","isValidExpYear","test","isValidOwnerName","toUpperCase","isValidCVC","src","alt","every","isAllInputFilled","Header","header","Template","title","hasPreviousPage","AddCardTemplate","AddCardPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1932904.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;900&display=swap');\n\n  * {\n    user-select: none;\n    font-family: 'Noto Sans KR', sans-serif;\n    color: #333333;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\ninterface Props {\n  width?: string;\n  flex?: boolean;\n  justifyContent?: 'space-between' | 'center';\n  alignItems?: 'center';\n  backgroundColor?: string;\n}\n\nconst Container = styled.div<Props>`\n  border-radius: 0.5rem;\n  box-sizing: border-box;\n  width: ${({ width }) => width || '100%'};\n  ${({ flex }) => flex && `display: flex;`}\n  ${({ justifyContent }) => justifyContent && `justify-content: ${justifyContent};`}\n  ${({ alignItems }) => alignItems && `align-items: ${alignItems};`};\n  ${({ backgroundColor }) => backgroundColor && `background-color: ${backgroundColor};`};\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\ninterface Props {\n  width?: string;\n}\n\nexport const AddCardInputLabelContainer = styled.label<Props>`\n  display: block;\n  margin-bottom: 1.5rem;\n  ${({ width }) => width && `width: ${width};`}\n\n  .label-text {\n    font-size: 0.875rem;\n    display: block;\n    margin-bottom: 0.5rem;\n  }\n`;\n","import { FC } from 'react';\nimport Container from '../../../common/Container';\nimport { AddCardInputLabelContainer } from './styles';\n\ninterface Props {\n  label: string | string[];\n  width?: string;\n}\n\nconst AddCardInputLabel: FC<Props> = ({ label, width, children }) => {\n  return (\n    <AddCardInputLabelContainer width={width}>\n      {Array.isArray(label) ? (\n        <Container flex justifyContent=\"space-between\">\n          {label.map((el, idx) => (\n            <span key={idx} className=\"label-text\">\n              {el}\n            </span>\n          ))}\n        </Container>\n      ) : (\n        <span className=\"label-text\">{label}</span>\n      )}\n      <Container flex>{children}</Container>\n    </AddCardInputLabelContainer>\n  );\n};\n\nexport default AddCardInputLabel;\n","export const LOCALE = {\n  KR: 'ko-KR',\n};\n","import { LOCALE } from '../constants/i18n';\n\nexport const formatNumber2Digits = (number: number) =>\n  number.toLocaleString(LOCALE.KR, {\n    minimumIntegerDigits: 2,\n  });\n","export const GRAY = '#ECEBF1';\nexport const BAEMINT = '#04C09E';\n","import styled, { css } from 'styled-components';\nimport { GRAY } from '../../../constants/palette';\n\ninterface CreditCardContainerProps {\n  cardColor: string;\n  size?: 'md' | 'lg';\n}\n\nexport const mdSize = css`\n  width: 16rem;\n  height: calc(16rem * 0.63);\n  font-size: 0.8rem;\n  border-radius: 6px;\n`;\n\nconst lgSize = css`\n  width: 20rem;\n  height: calc(20rem * 0.63);\n  font-size: 1rem;\n  border-radius: 7px;\n`;\n\nexport const CreditCardContainer = styled.div<CreditCardContainerProps>`\n  background: ${({ cardColor }) => cardColor || GRAY};\n  box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.25);\n  padding: 1em;\n  box-sizing: border-box;\n  font-weight: 500;\n  ${({ size }) => (size === 'lg' ? lgSize : mdSize)}\n\n  .card-name {\n    margin-bottom: 2em;\n    height: 1.25em;\n  }\n\n  .ic-chip {\n    background-color: #cbba64;\n    width: 4em;\n    height: calc(4em * 0.63);\n    border-radius: 6px;\n    margin-bottom: 0.725em;\n  }\n\n  .card-number {\n    display: flex;\n    height: 2em;\n    justify-content: space-between;\n    font-size: 1.25em;\n    letter-spacing: 0.05em;\n    padding: 0 0.5em;\n    margin-bottom: 0.125em;\n\n    span {\n      width: 100%;\n      text-align: center;\n    }\n  }\n\n  .info-wrapper {\n    font-size: 1.125em;\n    padding: 0 0.725em;\n\n    .owner-name {\n      overflow-x: hidden;\n      max-width: 10em;\n    }\n  }\n`;\n","export const EXP_DATE_WHITESPACE_CHARACTER = '0';\nexport const CARD_NUMBER_DIGITS = 4;\nexport const CARD_NUMBER_SEPARATOR = '-';\nexport const MASK_CHARACTER = '·';\n\nexport const EXP_DATE_DIGITS = 2;\n\nexport const MAX_OWNER_NAME_LENGTH = 30;\nexport const LAST_MONTH = 12;\n\nexport const CVC_DIGITS = 3;\n\nexport const DEFAULT_VALUE = {\n  MONTH: 'MM',\n  YEAR: 'YY',\n  OWNER_NAME: 'NAME',\n};\n","import { formatNumber2Digits } from '../../../utils/format';\nimport Container from '../Container';\nimport { CreditCardContainer } from './styles';\nimport { Card } from '../../../types';\nimport { CARD_NUMBER_SEPARATOR, MASK_CHARACTER } from '../../../constants/creditCard';\nimport { DEFAULT_VALUE } from '../../../constants/creditCard';\n\ninterface Props extends Omit<Card, 'id' | 'CVC' | 'password'> {\n  className?: string;\n  size?: 'lg' | 'md';\n}\n\nconst CreditCard = ({ className, size, cardBrand, ownerName, cardNumber, expDate }: Props) => {\n  const splitedCardNumber = cardNumber.split(CARD_NUMBER_SEPARATOR);\n  const { name, color } = cardBrand;\n\n  return (\n    <CreditCardContainer className={className} size={size} cardColor={color}>\n      <p className=\"card-name\">{name}</p>\n      <div className=\"ic-chip\" />\n      <p className=\"card-number\">\n        <span>{splitedCardNumber[0]}</span>\n        <span>{splitedCardNumber[1]}</span>\n        <span>{MASK_CHARACTER.repeat(splitedCardNumber[2].length)}</span>\n        <span>{MASK_CHARACTER.repeat(splitedCardNumber[3].length)}</span>\n      </p>\n      <Container flex justifyContent=\"space-between\" className=\"info-wrapper\">\n        <p className=\"owner-name\">{ownerName || DEFAULT_VALUE.OWNER_NAME}</p>\n        <p>\n          {expDate.month ? formatNumber2Digits(Number(expDate.month)) : DEFAULT_VALUE.MONTH} /{' '}\n          {expDate.year ? formatNumber2Digits(Number(expDate.year)) : DEFAULT_VALUE.YEAR}\n        </p>\n      </Container>\n    </CreditCardContainer>\n  );\n};\n\nexport default CreditCard;\n","import { FC, MouseEvent } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface Props {\n  modalClose?: () => void;\n  type?: 'bottom' | 'full';\n}\n\nconst ModalContainer = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.6);\n`;\n\nconst bottomType = css`\n  margin-top: auto;\n  height: 16rem;\n  border-radius: 1rem 1rem 0 0;\n`;\n\nconst fullType = css`\n  height: 100vh;\n`;\n\nconst ModalInner = styled.div<Pick<Props, 'type'>>`\n  position: relative;\n  width: 100%;\n  background: #fff;\n  ${({ type }) => (type === 'full' ? fullType : bottomType)}\n`;\n\nconst Modal: FC<Props> = ({ children, modalClose, type }) => {\n  const onClickDimmed = ({ target, currentTarget }: MouseEvent<HTMLDivElement>) => {\n    if (!modalClose || target !== currentTarget) return;\n\n    modalClose();\n  };\n\n  return (\n    <ModalContainer onClick={onClickDimmed}>\n      <ModalInner type={type}>{children}</ModalInner>\n    </ModalContainer>\n  );\n};\n\nexport default Modal;\n","import { FC, MouseEvent, MouseEventHandler } from 'react';\nimport styled, { css } from 'styled-components';\nimport { BAEMINT, GRAY } from '../../../constants/palette';\n\ninterface Props {\n  color?: string;\n  position?: 'bottom-right';\n}\n\nconst bottomRight = css`\n  position: fixed;\n  right: 4%;\n  bottom: 4%;\n`;\n\nconst Button = styled.button<Props>`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${({ color }) => BAEMINT || color};\n  ${({ position }) => position === 'bottom-right' && bottomRight}\n`;\n\ninterface IconButtonProps {\n  backgroundColor?: string;\n  onClick?: (event: MouseEvent<HTMLDivElement>) => void;\n}\n\nconst IconButtonContainer = styled.div<IconButtonProps>`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  cursor: pointer;\n  width: fit-content;\n  font-weight: 400;\n  font-size: 0.9em;\n\n  button {\n    cursor: pointer;\n    border: 0;\n    outline: none;\n    width: 3.5em;\n    height: 3.5em;\n    border-radius: 50%;\n    background-color: ${({ backgroundColor }) => backgroundColor || GRAY};\n    margin-bottom: 0.625rem;\n  }\n`;\n\nexport const IconButton: FC<IconButtonProps> = ({ children, backgroundColor, onClick }) => {\n  return (\n    <IconButtonContainer onClick={onClick} backgroundColor={backgroundColor}>\n      <button type=\"button\" />\n      <span>{children}</span>\n    </IconButtonContainer>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  height: 100%;\n  display: grid;\n  padding: 0 3rem;\n  grid-template-columns: repeat(4, 25%);\n  justify-content: center;\n  align-content: space-evenly;\n  justify-items: center;\n  outline: none;\n`;\n","import Modal from '../../common/Modal';\nimport { IconButton } from '../../common/Button';\nimport { ButtonContainer } from './styles';\nimport { FC, useEffect, useRef } from 'react';\nimport { CardBrand } from '../../../types';\n\ninterface Props {\n  cardBrands: CardBrand[];\n  onClickCardBrandButton: (cardBrand: CardBrand) => void;\n  modalClose: () => void;\n}\n\nconst CardBrandModal: FC<Props> = ({ cardBrands, onClickCardBrandButton, modalClose }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    containerRef.current?.focus();\n  }, []);\n\n  return (\n    <Modal modalClose={modalClose} type=\"bottom\">\n      <ButtonContainer ref={containerRef} tabIndex={0}>\n        {cardBrands.map((brand, index) => (\n          <IconButton key={index} backgroundColor={brand.color} onClick={() => onClickCardBrandButton(brand)}>\n            {brand.name}\n          </IconButton>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default CardBrandModal;\n","import styled from 'styled-components';\nimport { BAEMINT } from '../../../constants/palette';\n\ninterface Props {\n  underline?: boolean;\n  textCenter?: boolean;\n  width?: string;\n  color?: string;\n  height?: string;\n}\n\nconst Input = styled.input<Props>`\n  height: ${({ height }) => height || `3.375rem`};\n  border: none;\n  outline: none;\n  font-size: 1.125rem;\n  color: ${({ color }) => color || BAEMINT};\n  background-color: transparent;\n  width: ${({ width }) => width || '100%'};\n  ${({ textCenter }) => textCenter && `text-align: center;`}\n  ${({ underline }) => underline && `border-bottom: 1px solid #737373;`}\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  &[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const NicknameContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  header {\n    font-size: 1.25rem;\n    margin-bottom: 5rem;\n  }\n\n  .result-card {\n    margin-bottom: 2.5rem;\n  }\n`;\n","import Modal from '../../common/Modal';\nimport Input from '../../common/Input';\nimport { ChangeEvent, FC, useEffect } from 'react';\nimport CreditCard from '../../common/CreditCard';\nimport { CardBrand, ExpDate } from '../../../types';\nimport { NicknameContainer } from './styles';\nimport Button from '../../common/Button';\n\ninterface Props {\n  nickname: string;\n  setNickname: (nickname: string) => void;\n  cardBrand: CardBrand;\n  cardNumber: string;\n  expDate: ExpDate;\n  ownerName: string;\n}\n\nconst NicknameModal: FC<Props> = ({ cardBrand, cardNumber, expDate, ownerName, nickname, setNickname }) => {\n  const onChangeNickname = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!value) {\n      setNickname(cardBrand.name);\n    }\n    setNickname(value);\n  };\n\n  useEffect(() => {\n    setNickname(cardBrand.name);\n  }, []);\n\n  return (\n    <Modal type=\"full\">\n      <NicknameContainer>\n        <header>카드등록이 완료되었습니다.</header>\n        <CreditCard\n          className=\"result-card\"\n          cardBrand={cardBrand}\n          cardNumber={cardNumber}\n          expDate={expDate}\n          ownerName={ownerName}\n          size=\"lg\"\n        />\n        <Input\n          color=\"black\"\n          value={nickname}\n          onChange={onChangeNickname}\n          underline\n          textCenter\n          width=\"60%\"\n          height=\"2rem\"\n        />\n\n        <Button type=\"submit\" position=\"bottom-right\">\n          확인\n        </Button>\n      </NicknameContainer>\n    </Modal>\n  );\n};\n\nexport default NicknameModal;\n","const CARD_BRAND = [\n  {\n    name: '포코카드',\n    color: '#E24141',\n  },\n  {\n    name: '준카드',\n    color: '#547CE4',\n  },\n  {\n    name: '공원카드',\n    color: '#73BC6D',\n  },\n  {\n    name: '브랜카드',\n    color: '#DE59B9',\n  },\n  {\n    name: '로이드카드',\n    color: '#04C09E',\n  },\n  {\n    name: '파노카드',\n    color: '#E76E9A',\n  },\n  {\n    name: '콜린카드',\n    color: '#F37D3B',\n  },\n  {\n    name: '썬카드',\n    color: '#FBCD58',\n  },\n];\n\nexport default CARD_BRAND;\n","export const LABEL = {\n  CARD_NUMBER: '카드번호',\n  EXP_DATE: '만료일',\n  OWNER_NAME: '카드 소유자 이름',\n  CVC: '보안 코드(CVC/CVV)',\n  PASSWORD: '카드 비밀번호',\n};\n\nexport const PLACEHOLDER = {\n  MONTH: 'MM',\n  YEAR: 'YY',\n  OWNER_NAME: '카드에 표시된 이름과 동일하게 입력하세요.',\n};\n","export const ALERT = {\n  SHOULD_FILL_REQUIRED_INPUTS: '입력이 완료되지 않았습니다.',\n  CARD_SUBMIT_SUCCESS: '카드가 등록되었습니다.',\n};\n","import { FC } from 'react';\nimport styled from 'styled-components';\nimport { BAEMINT, GRAY } from '../../../constants/palette';\nimport Container from '../../common/Container';\n\nexport const AddCardFormContainer = styled.div`\n  .credit-card {\n    margin: 3rem auto 2rem;\n  }\n\n  .password-dot::after {\n    content: '';\n    width: 0.375em;\n    height: 0.375em;\n    display: block;\n    border-radius: 50%;\n    background-color: ${BAEMINT};\n  }\n\n  .question-mark {\n    width: fit-content;\n    height: fit-content;\n    position: relative;\n    display: flex;\n    align-items: center;\n    margin: auto 0 auto 1rem;\n    cursor: pointer;\n\n    &:hover::after {\n      content: '';\n      position: absolute;\n      display: block;\n      width: 10rem;\n      height: 10rem;\n      left: 2.5rem;\n      top: -2.5rem;\n      background: url('images/example.png') no-repeat;\n    }\n  }\n`;\n\ninterface Props {\n  width?: string;\n}\n\nexport const AddCardInputContainer: FC<Props> = ({ children, width }) => (\n  <Container flex justifyContent=\"center\" alignItems=\"center\" backgroundColor={GRAY} width={width}>\n    {children}\n  </Container>\n);\n","export const isNumberString = (value: string) => !isNaN(Number(value));\n","import { ChangeEvent, FocusEvent, FormEvent, MutableRefObject, useEffect, useRef, useState } from 'react';\nimport AddCardInputLabel from './AddCardInputLabel';\nimport CreditCard from '../../common/CreditCard';\nimport CardBrandModal from '../CardBrandModal';\nimport NicknameModal from '../NicknameModal';\nimport Container from '../../common/Container';\nimport Input from '../../common/Input';\nimport Button from '../../common/Button';\nimport CARD_BRAND from '../../../constants/cardData';\nimport { LABEL, PLACEHOLDER } from '../../../constants/addCardForm';\nimport {\n  CARD_NUMBER_DIGITS,\n  CARD_NUMBER_SEPARATOR,\n  EXP_DATE_DIGITS,\n  EXP_DATE_WHITESPACE_CHARACTER,\n  CVC_DIGITS,\n  MAX_OWNER_NAME_LENGTH,\n} from '../../../constants/creditCard';\nimport { ALERT } from '../../../constants/messages';\nimport { AddCardFormContainer, AddCardInputContainer } from './styles';\nimport { CardBrand, ExpDate } from '../../../types';\nimport {\n  isValidCardNumber,\n  isValidCVC,\n  isValidExpMonth,\n  isValidExpYear,\n  isValidOwnerName,\n  isValidPassword,\n  isAllInputFilled,\n} from './validator';\n\nexport type CardNumberState = [string, string, string, string];\nexport type PasswordState = [string, string];\n\nconst AddCardForm = () => {\n  const [cardBrand, setCardBrand] = useState({ name: '', color: '' });\n  const [ownerName, setOwnerName] = useState('');\n  const [cardNumber, setCardNumber] = useState<CardNumberState>(['', '', '', '']);\n  const [expDate, setExpDate] = useState<ExpDate>({ year: '', month: '' });\n  const [CVC, setCVC] = useState('');\n  const [password, setPassword] = useState<PasswordState>(['', '']);\n  const [isCardBrandModalVisible, setIsCardBrandModalVisible] = useState(false);\n  const [isNicknameModalVisible, setIsNicknameModalVisible] = useState(false);\n  const [nickname, setNickname] = useState('');\n\n  const secondCardNumberInputRef = useRef<HTMLInputElement>(null);\n  const thirdCardNumberInputRef = useRef<HTMLInputElement>(null);\n  const fourthCardNumberInputRef = useRef<HTMLInputElement>(null);\n  const expYearInputRef = useRef<HTMLInputElement>(null);\n  const secondPasswordInputRef = useRef<HTMLInputElement>(null);\n\n  const focusNextCardNumberInput = (index: number) => {\n    const cardNumberInputRefs = [secondCardNumberInputRef, thirdCardNumberInputRef, fourthCardNumberInputRef];\n\n    cardNumberInputRefs[index].current?.focus();\n  };\n\n  const onChangeCardNumber = ({ target: { value } }: ChangeEvent<HTMLInputElement>, index: number) => {\n    if (!isValidCardNumber(value)) return;\n\n    const nextValue: CardNumberState = [...cardNumber];\n\n    nextValue[index] = value;\n    setCardNumber(nextValue);\n\n    if (nextValue[index].length === CARD_NUMBER_DIGITS && index < 3) {\n      focusNextCardNumberInput(index);\n    }\n  };\n\n  const onChangeExpMonth = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidExpMonth(value)) return;\n\n    setExpDate({ ...expDate, month: value });\n\n    if (value.length === EXP_DATE_DIGITS) {\n      expYearInputRef.current?.focus();\n    }\n  };\n\n  const onChangeExpYear = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidExpYear(value)) return;\n\n    setExpDate({ ...expDate, year: value });\n  };\n\n  const onBlurExpDate = ({ target: { value } }: FocusEvent<HTMLInputElement>, index: keyof ExpDate) => {\n    if (value.length !== 1) return;\n\n    setExpDate({ ...expDate, [index]: EXP_DATE_WHITESPACE_CHARACTER + value });\n  };\n\n  const onChangeOwnerName = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidOwnerName(value)) return;\n\n    setOwnerName(value.toUpperCase());\n  };\n\n  const onChangeCVC = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    if (!isValidCVC(value)) return;\n\n    setCVC(value);\n  };\n\n  const onChangePassword = ({ target: { value } }: ChangeEvent<HTMLInputElement>, index: 0 | 1) => {\n    if (!isValidPassword(value)) return;\n\n    const nextPassword: PasswordState = [...password];\n\n    nextPassword[index as number] = value;\n    setPassword(nextPassword);\n\n    if (index === 0 && value.length === 1) {\n      secondPasswordInputRef.current?.focus();\n    }\n  };\n\n  const onClickCardBrandButton = (cardBrand: CardBrand) => {\n    setCardBrand(cardBrand);\n    setIsCardBrandModalVisible(false);\n  };\n\n  const onSetCardBrand = () => {\n    if (cardNumber[0].length !== CARD_NUMBER_DIGITS || cardNumber[1].length !== CARD_NUMBER_DIGITS) {\n      setCardBrand({ name: '', color: '' });\n      return;\n    }\n\n    const cardBrand = CARD_BRAND[Number(cardNumber[1][3])];\n\n    if (!cardBrand) {\n      setIsCardBrandModalVisible(true);\n      return;\n    }\n\n    setCardBrand(cardBrand);\n  };\n\n  useEffect(() => {\n    onSetCardBrand();\n  }, [cardNumber[0], cardNumber[1]]);\n\n  const isCardBrandEmpty = () =>\n    cardNumber[0].length === CARD_NUMBER_DIGITS && cardNumber[1].length === CARD_NUMBER_DIGITS && cardBrand.name === '';\n\n  const onClickNextButton = () => {\n    if (isCardBrandEmpty()) {\n      onSetCardBrand();\n      return;\n    }\n\n    if (!isAllInputFilled({ cardNumber, cardBrand, CVC, expDate, ownerName, password })) {\n      alert(ALERT.SHOULD_FILL_REQUIRED_INPUTS);\n      return;\n    }\n\n    setIsNicknameModalVisible(true);\n  };\n\n  const onSubmitCard = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    alert(ALERT.CARD_SUBMIT_SUCCESS);\n  };\n\n  return (\n    <AddCardFormContainer>\n      <CreditCard\n        className=\"credit-card\"\n        cardBrand={cardBrand}\n        expDate={expDate}\n        ownerName={ownerName}\n        cardNumber={cardNumber.join(CARD_NUMBER_SEPARATOR)}\n      />\n      <form onSubmit={onSubmitCard}>\n        <AddCardInputLabel label={LABEL.CARD_NUMBER}>\n          <AddCardInputContainer>\n            {[\n              { type: 'text', ref: null },\n              { type: 'text', ref: secondCardNumberInputRef },\n              { type: 'password', ref: thirdCardNumberInputRef },\n              { type: 'password', ref: fourthCardNumberInputRef },\n            ]\n              .map(({ type, ref }, index) => (\n                <Input\n                  key={index}\n                  type={type}\n                  ref={ref}\n                  textCenter\n                  maxLength={CARD_NUMBER_DIGITS}\n                  width=\"16%\"\n                  value={cardNumber[index]}\n                  onChange={event => onChangeCardNumber(event, index)}\n                />\n              ))\n              .reduce(\n                (acc: JSX.Element[], curr, index, array) => [\n                  ...acc,\n                  <span key={index + array.length}>{CARD_NUMBER_SEPARATOR}</span>,\n                  curr,\n                ],\n                []\n              )\n              .slice(1)}\n          </AddCardInputContainer>\n        </AddCardInputLabel>\n        <AddCardInputLabel label={LABEL.EXP_DATE} width=\"40%\">\n          <AddCardInputContainer>\n            <Input\n              type=\"text\"\n              placeholder={PLACEHOLDER.MONTH}\n              textCenter\n              maxLength={EXP_DATE_DIGITS}\n              width=\"40%\"\n              value={expDate.month}\n              onChange={onChangeExpMonth}\n              onBlur={event => onBlurExpDate(event, 'month')}\n            />\n            /\n            <Input\n              type=\"text\"\n              ref={expYearInputRef}\n              placeholder={PLACEHOLDER.YEAR}\n              textCenter\n              maxLength={EXP_DATE_DIGITS}\n              width=\"40%\"\n              value={expDate.year}\n              onChange={onChangeExpYear}\n              onBlur={event => onBlurExpDate(event, 'year')}\n            />\n          </AddCardInputContainer>\n        </AddCardInputLabel>\n        <AddCardInputLabel label={[LABEL.OWNER_NAME, `${ownerName.length} / ${MAX_OWNER_NAME_LENGTH}`]}>\n          <AddCardInputContainer>\n            <Input\n              placeholder={PLACEHOLDER.OWNER_NAME}\n              type=\"text\"\n              width=\"90%\"\n              maxLength={MAX_OWNER_NAME_LENGTH}\n              value={ownerName}\n              onChange={onChangeOwnerName}\n            />\n          </AddCardInputContainer>\n        </AddCardInputLabel>\n        <AddCardInputLabel label={LABEL.CVC}>\n          <AddCardInputContainer width=\"25%\">\n            <Input type=\"password\" maxLength={CVC_DIGITS} textCenter value={CVC} onChange={onChangeCVC} />\n          </AddCardInputContainer>\n          <Container className=\"question-mark\">\n            <img src=\"buttons/question-mark-btn.svg\" alt=\"cvc/cvv 도움말\" />\n          </Container>\n        </AddCardInputLabel>\n        <AddCardInputLabel label={LABEL.PASSWORD}>\n          <Container flex justifyContent=\"space-between\" width=\"60%\">\n            <AddCardInputContainer width=\"23%\">\n              <Input type=\"password\" textCenter value={password[0]} onChange={event => onChangePassword(event, 0)} />\n            </AddCardInputContainer>\n            <AddCardInputContainer width=\"23%\">\n              <Input\n                type=\"password\"\n                ref={secondPasswordInputRef}\n                textCenter\n                value={password[1]}\n                onChange={event => onChangePassword(event, 1)}\n              />\n            </AddCardInputContainer>\n            <AddCardInputContainer width=\"23%\">\n              <span className=\"password-dot\" />\n            </AddCardInputContainer>\n            <AddCardInputContainer width=\"23%\">\n              <span className=\"password-dot\" />\n            </AddCardInputContainer>\n          </Container>\n        </AddCardInputLabel>\n        <Button type=\"button\" position=\"bottom-right\" onClick={onClickNextButton}>\n          다음\n        </Button>\n\n        {isCardBrandModalVisible && (\n          <CardBrandModal\n            cardBrands={CARD_BRAND}\n            onClickCardBrandButton={onClickCardBrandButton}\n            modalClose={() => setIsCardBrandModalVisible(false)}\n          />\n        )}\n\n        {isNicknameModalVisible && (\n          <NicknameModal\n            nickname={nickname}\n            setNickname={setNickname}\n            ownerName={ownerName}\n            cardNumber={cardNumber.join(CARD_NUMBER_SEPARATOR)}\n            expDate={expDate}\n            cardBrand={cardBrand}\n          />\n        )}\n      </form>\n    </AddCardFormContainer>\n  );\n};\n\nexport default AddCardForm;\n","import { CardNumberState, PasswordState } from '.';\nimport { Card } from '../../../types';\nimport { isNumberString } from '../../../utils/validator';\nimport {\n  CARD_NUMBER_DIGITS,\n  CVC_DIGITS,\n  EXP_DATE_DIGITS,\n  LAST_MONTH,\n  MAX_OWNER_NAME_LENGTH,\n} from '../../../constants/creditCard';\n\nexport const isValidCardNumber = (value: string) => isNumberString(value) && value.length <= CARD_NUMBER_DIGITS;\n\nexport const isValidExpMonth = (value: string) =>\n  isNumberString(value) && value.length <= EXP_DATE_DIGITS && Number(value) <= LAST_MONTH;\n\nexport const isValidExpYear = (value: string) => isNumberString(value) && value.length <= EXP_DATE_DIGITS;\n\nexport const isValidOwnerName = (value: string) => value.length <= MAX_OWNER_NAME_LENGTH && !/[^a-zA-Z\\s]/g.test(value);\n\nexport const isValidCVC = (value: string) => isNumberString(value) && value.length <= CVC_DIGITS;\n\nexport const isValidPassword = (value: string) => isNumberString(value) && value.length <= 1;\n\ninterface isAllInputFilledParamType extends Omit<Card, 'cardNumber' | 'password'> {\n  cardNumber: CardNumberState;\n  password: PasswordState;\n}\n\nexport const isAllInputFilled = ({\n  cardNumber,\n  cardBrand,\n  CVC,\n  expDate,\n  ownerName,\n  password,\n}: isAllInputFilledParamType) =>\n  cardNumber.every(el => el.length === CARD_NUMBER_DIGITS) &&\n  cardBrand.name &&\n  cardBrand.color &&\n  expDate.month.length === EXP_DATE_DIGITS &&\n  expDate.year.length === EXP_DATE_DIGITS &&\n  CVC.length === CVC_DIGITS &&\n  password[0].length === 1 &&\n  password[1].length === 1 &&\n  ownerName.length > 0;\n","import { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n\n  a {\n    display: flex;\n    align-items: center;\n    margin-right: 0.25rem;\n  }\n`;\n\ninterface Props {\n  title: string;\n  hasPreviousPage?: boolean;\n  className?: string;\n}\n\nconst Template: FC<Props> = ({ className, children, title, hasPreviousPage }) => {\n  return (\n    <div className={className}>\n      <Header>\n        {hasPreviousPage && (\n          <a>\n            <img src=\"buttons/back-btn.svg\" alt=\"뒤로가기\" />\n          </a>\n        )}\n        <span className=\"title\">{title}</span>\n      </Header>\n      {children}\n    </div>\n  );\n};\n\nexport default Template;\n","import styled from 'styled-components';\nimport Template from '../../common/Template';\n\nconst AddCardTemplate = styled(Template)`\n  padding: 1rem 1.125rem;\n`;\n\nexport default AddCardTemplate;\n","import AddCardForm from '../../components/AddCard/AddCardForm';\nimport AddCardTemplate from '../../components/AddCard/AddCardTemplate';\n\nconst title = '카드추가';\n\nconst AddCardPage = () => {\n  return (\n    <AddCardTemplate title={title} hasPreviousPage>\n      <AddCardForm />\n    </AddCardTemplate>\n  );\n};\n\nexport default AddCardPage;\n","import GlobalStyle from './global.styles';\nimport AddCardPage from './pages/AddCardPage';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"App\">\n        <AddCardPage />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}